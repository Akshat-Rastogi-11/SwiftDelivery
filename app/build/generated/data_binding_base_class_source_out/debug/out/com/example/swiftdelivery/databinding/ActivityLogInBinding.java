// Generated by view binder compiler. Do not edit!
package com.example.swiftdelivery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.swiftdelivery.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLogInBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView loginApplogo;

  @NonNull
  public final Button loginBtn;

  @NonNull
  public final EditText loginMailInput;

  @NonNull
  public final EditText loginNameInput;

  @NonNull
  public final EditText loginPasswordInput;

  private ActivityLogInBinding(@NonNull RelativeLayout rootView, @NonNull ImageView loginApplogo,
      @NonNull Button loginBtn, @NonNull EditText loginMailInput, @NonNull EditText loginNameInput,
      @NonNull EditText loginPasswordInput) {
    this.rootView = rootView;
    this.loginApplogo = loginApplogo;
    this.loginBtn = loginBtn;
    this.loginMailInput = loginMailInput;
    this.loginNameInput = loginNameInput;
    this.loginPasswordInput = loginPasswordInput;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLogInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLogInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_log_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLogInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login_applogo;
      ImageView loginApplogo = rootView.findViewById(id);
      if (loginApplogo == null) {
        break missingId;
      }

      id = R.id.login_btn;
      Button loginBtn = rootView.findViewById(id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.login_mail_input;
      EditText loginMailInput = rootView.findViewById(id);
      if (loginMailInput == null) {
        break missingId;
      }

      id = R.id.login_name_input;
      EditText loginNameInput = rootView.findViewById(id);
      if (loginNameInput == null) {
        break missingId;
      }

      id = R.id.login_password_input;
      EditText loginPasswordInput = rootView.findViewById(id);
      if (loginPasswordInput == null) {
        break missingId;
      }

      return new ActivityLogInBinding((RelativeLayout) rootView, loginApplogo, loginBtn,
          loginMailInput, loginNameInput, loginPasswordInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
